package insecure

import (
	"crypto/tls"
	"crypto/x509"
	"log"
)

const certPEM = `-----BEGIN CERTIFICATE-----
MIID5zCCAs+gAwIBAgIJAKEbPO1djeJ4MA0GCSqGSIb3DQEBCwUAMIGJMQswCQYD
VQQGEwJJRDETMBEGA1UECAwKeW9neWFrYXJ0YTETMBEGA1UEBwwKeW9neWFrYXJ0
YTESMBAGA1UECgwJbG9jYWxob3N0MRIwEAYDVQQLDAlsb2NhbGhvc3QxEjAQBgNV
BAMMCWxvY2FsaG9zdDEUMBIGCSqGSIb3DQEJARYFYUBiLmMwHhcNMTkwODI4MjEx
NzA3WhcNMjkwODI1MjExNzA3WjCBiTELMAkGA1UEBhMCSUQxEzARBgNVBAgMCnlv
Z3lha2FydGExEzARBgNVBAcMCnlvZ3lha2FydGExEjAQBgNVBAoMCWxvY2FsaG9z
dDESMBAGA1UECwwJbG9jYWxob3N0MRIwEAYDVQQDDAlsb2NhbGhvc3QxFDASBgkq
hkiG9w0BCQEWBWFAYi5jMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA
2F9GaBlG6QfRrFI5tRhJcGZnIPjyKa3vMJP6Do3ZDJm8Fj9LaF5CIf5BDHWJ6E3A
v798bcK4sTcSACxOvHdUHffG+DcI0yVlIls+P4z8hbB93Gi4ZCr/23G5aLBNEr+E
S3BNNTUmgxfAre1BbsgvunjrADr5mDaURfyIQCGjeBcz1H1vUkO0kizV118F8yBM
oCMe4pjXzbUOHUyfnuv6bUuOGcbQBPP6jg5w4hEw/pMFCbo4Mf00CTJkOmpukfdp
sPmaHowpxTCHClgMltNiXoBJKv3HctNlpJ2BHeq5wNt77AGfYU7GnLihVDBhaRv2
aB6iQDNXTlfwkAcJgHejpwIDAQABo1AwTjAdBgNVHQ4EFgQUcvfscPQAQMj/+bl8
dyY1acuMmXcwHwYDVR0jBBgwFoAUcvfscPQAQMj/+bl8dyY1acuMmXcwDAYDVR0T
BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAw/tWnebriD8mncFz/azj6/ZP6/Ck
OCiTB3uCGZTwim+lURfTAo9k0EXSY2dKXrQIU8plVpuMGpKnqVX2JL+dUh5W7gN3
GEZ+KCKylqJuVlckQ9qQA5zkluHrSLjlkLdCH+gRfDncN7z7TQ+MFbH1808uXM+X
rLprHJUrae0+C1Wg4bvI2t6plUUbdpzb1Z1RDKO4iWtKC7wRUnATCtt8E4UaGvj0
m5ipkzKe9tGWcciQLSGzMbQ7zZ1n/VkEzqKd96tHUQ9YgJ+NEZAgLbQnE8NPBjvQ
9DPGV1wH4/Jt501ympJiicgkjIhH8PfuZr5UCtLtBixpMeBqf+RK/coiKQ==
-----END CERTIFICATE-----`

const keyPEM = `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDYX0ZoGUbpB9Gs
Ujm1GElwZmcg+PIpre8wk/oOjdkMmbwWP0toXkIh/kEMdYnoTcC/v3xtwrixNxIA
LE68d1Qd98b4NwjTJWUiWz4/jPyFsH3caLhkKv/bcblosE0Sv4RLcE01NSaDF8Ct
7UFuyC+6eOsAOvmYNpRF/IhAIaN4FzPUfW9SQ7SSLNXXXwXzIEygIx7imNfNtQ4d
TJ+e6/ptS44ZxtAE8/qODnDiETD+kwUJujgx/TQJMmQ6am6R92mw+ZoejCnFMIcK
WAyW02JegEkq/cdy02WknYEd6rnA23vsAZ9hTsacuKFUMGFpG/ZoHqJAM1dOV/CQ
BwmAd6OnAgMBAAECggEAI8Fq0x0KOMwP/BgCbUi8KhTiCfLZocWadz6c3fbW3Vwy
VsLS5UZeS1vGyBZMWdUvewBbwY+iEbb2BI1N3ZsijWk6uh3uGWZelhTZ7oqP2E/Y
HKo5fmQUr+DVMNWhhu2bIRRHzfkgih1Mu/EvFO2D5Z7BxuH4CQ1L51zZ7y8f4mI1
ZyNWNrG23ZNRK4R3JTA9e6ei/JPZgIxh94VPwHIs796L+03hPzRKzZ0NLD9C/ldS
kKgYFBS3OBPZrTXVpFvejrJ2TBWSftKHMQcMjSsU5VhkTp6la/gC5cBL+o0vM19L
xbivDs2kt74hMJjyaIuEKs6Laan7PQUwcWrbuZm5QQKBgQDsZLSnChDSPulRvZJH
qsU56K/Y+J3tpDEGoe0ikHO1VK82DiIV+I6jsfPeLGqCV9fEX5VB30Mmg8Xh4FQw
O8/da6n0yS5b9+V00UiWcMB/xXSd96ji+TaUhnvr9z/pRxyUxEQgD8KarCy4syNn
GVHzstEVEsO1m+qA9dZ/n5a2twKBgQDqUXZ9cXj1KG1ij/OKkh74JmF7bOpFiZVe
C/XX+WLqa2dBo+Av4c+domIVTX3aiGuGEQBmgVJ8ylO+CVnUAg/XSNUtYZEVsxP+
hO7NvwVEo2p3LEPTKE+kTjrht98zvgAqBt9gORbX/efWsbxlQx7y6Q2tIZWGlYgc
wqCOT8EKkQKBgGMOV/ze5OmU3yQXceKCFp8LeBRNKbBY6wpCdCHVsga786eNCI94
Vh0WBoCE0CTKNmndO6gcrADJmvPpkp2bkqDP6qneW4TCPe5TfD0+BgwEa7d9/dEO
aOaX6/mW47sWx003aOyebgduOlczCZS8MXES7zYLZOMG8J8VZMqZzwfFAoGAbenk
oRdXW/ioxvErlrbQXCr000bV5eSR8lm96p+LLNdQylOq2Aserpz7UW7WOGqBtZPI
Ek1bejoWajBMuMx2zc/WX8FCo2ErYdrNgim2uOnHCTv0XNqt8S7ZJARyaP0Zap1q
ruJYutzZobYh34ZKwDteNPZqA4WlIYiSc+8paGECgYEAl1FQ27bN6nYAjoRpkeos
ctUc/5MIXbFMCYhyZagXO/FilPNqCyMldLO3mJgc1g0AGymZq+k6kJucElVuKcI9
dbEsYlbGtz4VW65bRcvWuET/ndJfEACSw8Oe7giwjxNYFv4F209oX1cNEurq16Er
goKL82YjuyVxJsIj+6HO9HY=
-----END PRIVATE KEY-----`

var (
	// Cert is a self signed certificate
	Cert tls.Certificate
	// CertPool contains the self signed certificate
	CertPool *x509.CertPool
)

func init() {
	var err error
	Cert, err = tls.X509KeyPair([]byte(certPEM), []byte(keyPEM))
	if err != nil {
		log.Fatalln("Failed to parse key pair:", err)
	}
	Cert.Leaf, err = x509.ParseCertificate(Cert.Certificate[0])
	if err != nil {
		log.Fatalln("Failed to parse certificate:", err)
	}

	CertPool = x509.NewCertPool()
	CertPool.AddCert(Cert.Leaf)
}
