package insecure

import (
	"crypto/tls"
	"crypto/x509"
	"log"
)

const certPEM = `-----BEGIN CERTIFICATE-----
MIIC+TCCAeGgAwIBAgIQI+k3+Ap2F50K3SS38Uuq8TANBgkqhkiG9w0BAQsFADAS
MRAwDgYDVQQKEwdBY21lIENvMB4XDTE5MDgyODE1MzUxMVoXDTIwMDgyNzE1MzUx
MVowEjEQMA4GA1UEChMHQWNtZSBDbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBANArYwnB+Q5FJYYdeVRS3SST3uNP0PQqN81l86GU/8Z0ponF3CYkLbEk
O2nbQ2v30eA6LKvhT2wQd85cY56MOXBFnFrLy8vDEya9loACQ4KRUTTlv8SEXScr
evvDzheQc+mq+unM7zS34NYbfw6Xk1Gqm60jTuFlzCdo9Xlxxh3sJu2KcTX9yZwI
1VCmRbwvD4Ox1F2r+G0cdwsV8U7t2uWHawcSISgVxXg3VAEjbK9qOGcl6z2IUcRC
euZYWFt8WDUhKXZsqjIbYHfD84irHlSIsx+3jVkMCF/vMlDCJm5EgMU5xHDOEkM9
+2OhZbeCR7kV4p+YchlOwXAg68fslL0CAwEAAaNLMEkwDgYDVR0PAQH/BAQDAgWg
MBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwFAYDVR0RBA0wC4IJ
bG9jYWxob3N0MA0GCSqGSIb3DQEBCwUAA4IBAQBd4Cy5m5oz5YDKGXWDwd1Vw1fK
Jjs+e9yB+xpjZ1BK92yTNc9Ym1f10hHCDGYSfGU1e/AyoTnrAcfOhH8GpqSIx1zt
nn1CwLFU6b4vmvVlZlQYQ6KgqGpzjsso55BoD+SFjvqZ3ACEwAKEG3JniB3lGmxJ
saJ3G/mkRLdOBibOSQLCV29nCLRxDtT81B4Lrx/VJk4+S/K7mnLCHpK/dfmSvG5J
Dw9xYYmzXUxrPYlpRgbqBJw3DCXgpV62TBB7fVDC/u797NrNvyfnR8odNsKjLqb7
QztuCvRmCD3Jo0mG8jw9LO039sJveLcCYY7ljG2S0VE3ONCI2g+YsTyjFCON
-----END CERTIFICATE-----
`

const keyPEM = `-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEA0CtjCcH5DkUlhh15VFLdJJPe40/Q9Co3zWXzoZT/xnSmicXc
JiQtsSQ7adtDa/fR4Dosq+FPbBB3zlxjnow5cEWcWsvLy8MTJr2WgAJDgpFRNOW/
xIRdJyt6+8POF5Bz6ar66czvNLfg1ht/DpeTUaqbrSNO4WXMJ2j1eXHGHewm7Ypx
Nf3JnAjVUKZFvC8Pg7HUXav4bRx3CxXxTu3a5YdrBxIhKBXFeDdUASNsr2o4ZyXr
PYhRxEJ65lhYW3xYNSEpdmyqMhtgd8PziKseVIizH7eNWQwIX+8yUMImbkSAxTnE
cM4SQz37Y6Flt4JHuRXin5hyGU7BcCDrx+yUvQIDAQABAoIBAQC7g3mQ3pOUESE9
7+rM1F+zhSevJsSYTDc74+xTzr2fbJBfZkVqbghimrqSHhpbdT4udviqUyiRtTvW
PU7XEITk5y9yckU/ZJcpvHmHEYLyaCf4OERHptuqXvZHNxe8Djj7cTLXy+xlVoVH
GDmZUVw4oi/dBAMX8fS2Q0tre9r0M5bKPz3FY3b5w67rW3OPQUHui8UwcReqvLrw
4BnWK9H5FVxDFp9d64ZVkEcFem2Vkmvy45TpVtEvH7f9zwWAvxFdSuhVbzno20sk
z6xMPJFYCo8ildD+lz+slFWtJOWnhN08RtIWK2Ld/DW+UmTLhYMFKQ652QLLtCxE
J35oTxCZAoGBAO0mJTed4Tc2swhbQSrWy6ePCEe/0Ba0DYK22SdzWklwhmG6J6pC
gBiMddTK4/Jmk79s0rcjint0/jxHKdGiiKHTv1IW4U+O2GQtRwPGQHTF2IU9ULmm
8U6Waas9OiNp8RmhDMd8dbQk4X91yJA7xTtLq6nmKFmSWkWE/jEcZyd/AoGBAOC3
hhP+f9LfwFGtLqS9u2EoLledflE5KkRY+h//F/6/96evKwhf9NWMjwbBDXKH6FdJ
TZfNTmyRriU4gbqhlaUaL0Mds3phZNhDVEyEaOu/MBd8XmYM3+eOIQqhUIKPTJdi
U3N+B+U2I0u0gDD7yOtjn3B81RKH8r2s7yYKzgHDAoGBAKGRfYW40Ln3UF5/HZT8
JmAQOMn5SuJM5W+K98PC+V5ThZqLY37CM9eFyrmhSU/axwqCL8WKN00JVjTnHvyu
SXxHcW+SGwtC/PazSlCt/zgPmwab0aXKsVijbXa3DicWhKa7bKN0jhSfk+ps6qop
rqRJV7k3D4KHDW2TwELhYP4tAoGABjIpOT3oKllPBTGAOrycgQZJmNLX28d2ueG2
K9GtyLFkU7RJvHZg2s6AVxBVnZXPuzBjOk9H3Uh7A722Hf48kQvSx8f23eX3kNry
ZRW1iuJ/ofYk6C1sswbBNHjULnVjCD2GzYVpFFHU0U6Nxkv68zqQ99oJSfSDpeUx
xtu/aF8CgYBd1yeFkyhz+hzhylWIdjvhatNtg4BVZwrVH/WGzdG0FiUn61MRZJ3q
vY1ngN8YKED582NRjW/JQDtitbvIagu6U6Kbd/s6ll6ZnYPv7EKgckOM7Jd7gybB
DAs05kwCsUfd2143V6dwkBJ22hcbkm1BIuY1mkKZhmGseJXnRixBlg==
-----END RSA PRIVATE KEY-----
`

var (
	// Cert is a self signed certificate
	Cert tls.Certificate
	// CertPool contains the self signed certificate
	CertPool *x509.CertPool
)

func init() {
	var err error
	Cert, err = tls.X509KeyPair([]byte(certPEM), []byte(keyPEM))
	if err != nil {
		log.Fatalln("Failed to parse key pair:", err)
	}
	Cert.Leaf, err = x509.ParseCertificate(Cert.Certificate[0])
	if err != nil {
		log.Fatalln("Failed to parse certificate:", err)
	}

	CertPool = x509.NewCertPool()
	CertPool.AddCert(Cert.Leaf)
}
